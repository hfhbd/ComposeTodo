name: CD

on:
  release:
    types: [ created ]
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

env:
  service_name: todo

concurrency:
  group: "cd"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write

    env:
      GRADLE_OPTS: -Dorg.gradle.caching=true

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Get latest release
        id: setup-version
        uses: hfhbd/actions/setup-version@main
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.setup-version.outputs.full-tag }}

      - name: Login to GitHub Container Registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/963273362268/locations/global/workloadIdentityPools/github-deployment/providers/github
          service_account: github-todo@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
      - run: gcloud auth configure-docker europe-west4-docker.pkg.dev

      - uses: actions/configure-pages@v5
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17
      - uses: gradle/actions/setup-gradle@v3

      - name: Push Docker Image to GitHub
        run: ./gradlew -Pversion=$version -Pregistry=GitHub :backend:jib --no-configuration-cache
      - name: Push Docker Image to Google Container Registry
        run: ./gradlew -Pversion=$version -Pregistry=Google -Pproject_id=${{ secrets.PROJECT_ID }} -Pservice_name=$service_name :backend:jib --no-configuration-cache

      - name: Assemble with Gradle
        run: ./gradlew :web:jsBrowserDistribution
      - uses: actions/upload-pages-artifact@v3
        with:
          path: web/build/dist/js/productionExecutable
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  googleRun:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Get latest release
        id: setup-version
        uses: hfhbd/actions/setup-version@main
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.setup-version.outputs.full-tag }}
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          workload_identity_provider: projects/963273362268/locations/global/workloadIdentityPools/github-deployment/providers/github
          service_account: github-todo@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.service_name }}
          region: europe-west4
          image: europe-west4-docker.pkg.dev/${{ secrets.PROJECT_ID }}/composetodo-repo/${{ env.service_name }}:${{ env.version }}
          secrets: |
            keyID=${{ secrets.CK_KEYID }}
            privateKey=${{ secrets.CK_KEY }}
