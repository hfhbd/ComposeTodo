name: CD

on:
  release:
    types: [ created ]

env:
  service_name: todo

concurrency:
  group: "cd"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write

    env:
      GRADLE_OPTS: -Dorg.gradle.caching=true

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4
      - name: Set environment for version
        run: long="${{ github.ref }}"; version=${long#"refs/tags/v"}; echo "version=${version}" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.RUN_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}
      - name: Login to Google Container Registry
        run: gcloud auth configure-docker "europe-west4.pgk.dev" --quiet

      - uses: actions/configure-pages@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17
      - uses: gradle/gradle-build-action@v2
      - name: Push Docker Image to GitHub
        run: ./gradlew -Pversion=$version -Pregistry=GitHub jib --no-configuration-cache
      - name: Push Docker Image to Google Container Registry
        run: ./gradlew -Pversion=$version -Pregistry=Google -Pproject_id=${{ secrets.PROJECT_ID }} -Pservice_name=$service_name jib --no-configuration-cache
      - name: Assemble with Gradle
        run: ./gradlew :web:jsBrowserDistribution
      - uses: actions/upload-pages-artifact@v2
        with:
          path: web/build/dist/js/productionExecutable
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  googleRun:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Set environment for version
        run: long="${{ github.ref }}"; version=${long#"refs/tags/v"}; echo "version=${version}" >> $GITHUB_ENV
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.RUN_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}
      - name: Deploy using Google Run
        run: |-
          gcloud run deploy "$service_name" \
          --quiet \
          --region "europe-west4" \
          --image "europe-west4-docker.pkg.dev/${{ secrets.PROJECT_ID }}/composetodo-repo/$service_name:$version" \
          --platform "managed" \
          --allow-unauthenticated \
          --set-env-vars keyID="${{ secrets.CK_KEYID }}",privateKey=${{ secrets.CK_KEY}} \
          --port 80
