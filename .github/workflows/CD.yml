name: CD

on:
  release:
    types: [ created ]

env:
  service_name: todo

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write

    steps:
      - name: Set environment for version
        run: long="${{ github.ref }}"; version=${long#"refs/tags/v"}; echo "version=${version}" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        run: echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.RUN_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.PROJECT_ID }}
      - name: Login to Google Container Registry
        run: gcloud auth configure-docker "eu.gcr.io" --quiet

      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
      - name: Push Docker Image to GitHub
        run: ./gradlew -Pversion=$version -Pregistry=GitHub jib
      - name: Push Docker Image to Google Container Registry
        run: ./gradlew -Pversion=$version -Pproject_id=${{ secrets.PROJECT_ID }} -Pservice_name=$service_name -Pregistry=Google jib
      - name: Assemble with Gradle
        run: ./gradlew :web:browserDistribution
      - name: Upload WebApp Artifact
        uses: actions/upload-artifact@v3
        with:
          path: web/build/distributions

  webApp:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set environment for version
        run: long="${{ github.ref }}"; version=${long#"refs/tags/v"}; echo "version=${version}" >> $GITHUB_ENV
      - name: Switch to GitHub Pages
        uses: actions/checkout@v3
        with:
          ref: webpage
      - uses: actions/download-artifact@v3
      - name: Copy files to /
        run: cp artifact/* . && rm -fdr artifact
      - name: Config git
        run: git config user.email "cd-bot@softwork.app" && git config user.name "CD Bot"
      - name: Add changes
        run: git add .
      - name: Try to commit changes
        run: git commit -m "Publish $version"
        continue-on-error: true
      - name: Publish changes
        run: git push
        if: ${{ success() }}

  googleRun:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Set environment for version
        run: long="${{ github.ref }}"; version=${long#"refs/tags/v"}; echo "version=${version}" >> $GITHUB_ENV
      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.RUN_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.PROJECT_ID }}
      - name: Deploy using Google Run
        run: |-
          gcloud run deploy "$service_name" \
          --quiet \
          --region "europe-west4" \
          --image "eu.gcr.io/${{ secrets.PROJECT_ID }}/$service_name:$version" \
          --platform "managed" \
          --allow-unauthenticated \
          --set-env-vars keyID="${{ secrets.CK_KEYID }}",privateKey=${{ secrets.CK_KEY}} \
          --port 80
